class Solution {
    /**
     * @param Integer $n
     * @return Integer
     */
    
    /*
    Вес Хэмминга - это количество установленных (единичных) битов в двоичном представлении числа.
    */
    function hammingWeight($n) {
        //Переводит число из десятичной системы счисления в двоичную
        $binary = decbin($n);

        return substr_count($binary,1);
    }
    
    function hammingWeight2($n) {
        //Переводит число из десятичной системы счисления в двоичную
        $str = decbin($n);
        $str = str_replace(0,'',$str);
    
        return strlen($str);
    }
    
    function hammingWeight3($n) {
        $count = 0;

        //Этот цикл будет перебирать каждый бит в двоичном представлении числа $n.
        for($i=0; $i < 32; $i++){
            //Этот оператор проверяет, является ли младший бит числа $n равным 1. Он делает это с помощью операции побитового И (&)
            if($n & 1 == 1){
                $count++;
            }
            
            /*
            Эта операция сдвигает биты числа $n вправо на одну позицию. Это эквивалентно делению числа 
            на 2 (потому что каждое смещение на одну позицию вправо уменьшает число в два раза). 
            Таким образом, мы переходим к следующему биту в двоичном представлении числа.
            */
            $n >>= 1;
        }

        return $count;
    }
}